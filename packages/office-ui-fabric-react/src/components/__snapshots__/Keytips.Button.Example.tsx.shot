// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component Examples renders Keytips.Button.Example.tsx correctly 1`] = `
<div>
  <p>
    When multiple Keytips start with the same character, typing that character will filter the visible keytips.
  </p>
  <Stack
    horizontal={true}
    tokens={
      Object {
        "childrenGap": 20,
      }
    }
  >
    <CustomizedDefaultButton
      keytipProps={
        Object {
          "content": "1A",
          "keySequences": Array [
            "1a",
          ],
          "onExecute": [Function],
        }
      }
      onClick={[Function]}
      text="Button"
    />
    <CustomizedCompoundButton
      keytipProps={
        Object {
          "content": "1B",
          "keySequences": Array [
            "1b",
          ],
          "onExecute": [Function],
        }
      }
      onClick={[Function]}
      secondaryText="With a Keytip"
      styles={
        Object {
          "root": Object {
            "marginBottom": 28,
          },
        }
      }
      text="Compound Button"
    />
    <CustomizedDefaultButton
      keytipProps={
        Object {
          "content": "2A",
          "keySequences": Array [
            "2a",
          ],
          "onExecute": [Function],
        }
      }
      menuProps={
        Object {
          "items": Array [
            Object {
              "key": "buttonMenuItem1",
              "keytipProps": Object {
                "content": "E",
                "keySequences": Array [
                  "2a",
                  "e",
                ],
              },
              "text": "Menu Item 1",
            },
            Object {
              "key": "buttonMenuItem2",
              "keytipProps": Object {
                "content": "8",
                "keySequences": Array [
                  "2a",
                  "8",
                ],
              },
              "text": "Menu Item 2",
            },
          ],
        }
      }
      onClick={[Function]}
      text="Button with Menu"
    />
    <CustomizedDefaultButton
      keytipProps={
        Object {
          "content": "2B",
          "keySequences": Array [
            "2b",
          ],
          "onExecute": [Function],
        }
      }
      menuProps={
        Object {
          "items": Array [
            Object {
              "key": "splitButtonMenuButton1",
              "keytipProps": Object {
                "content": "C",
                "keySequences": Array [
                  "2b",
                  "c",
                ],
              },
              "text": "Split Button Menu Item 1",
            },
            Object {
              "key": "splitButtonMenuButton2",
              "keytipProps": Object {
                "content": "WW",
                "keySequences": Array [
                  "2b",
                  "ww",
                ],
              },
              "text": "Split Button Menu Item 2",
            },
          ],
        }
      }
      onClick={[Function]}
      split={true}
      styles={
        Object {
          "splitButtonContainer": Object {
            "height": 32,
          },
        }
      }
      text="Split Button"
    />
    <CustomizedDefaultButton
      text="I do not have a keytip"
    />
  </Stack>
  <p>
    The 'offset' prop can be used to position the keytip a set distance from the top-left corner of the element.
  </p>
  <CustomizedDefaultButton
    keytipProps={
      Object {
        "content": "00",
        "keySequences": Array [
          "00",
        ],
        "offset": Object {
          "left": 10,
          "top": 10,
          "x": 10,
          "y": 10,
        },
        "onExecute": [Function],
      }
    }
    styles={
      Object {
        "root": Object {
          "marginBottom": 28,
        },
      }
    }
    text="Button keytip offset 10x10"
  />
  <p>
    When a Keytip's corresponding component is disabled, the keytip still appears but cannot be triggered.
  </p>
  <StyledToggleBase
    defaultChecked={true}
    offText="Disabled"
    onChange={[Function]}
    onClick={[Function]}
    onText="Enabled"
  />
  <CustomizedDefaultButton
    disabled={false}
    keytipProps={
      Object {
        "content": "01",
        "keySequences": Array [
          "01",
        ],
        "onExecute": [Function],
      }
    }
    onClick={[Function]}
    text="Enabled Button"
  />
</div>
`;
