// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component Examples renders Breadcrumb.Basic.Example.tsx correctly 1`] = `
<div>
  <StyledLabelBase
    styles={
      Object {
        "root": Object {
          "margin": "10px 0",
          "selectors": Object {
            "&:not(:first-child)": Object {
              "marginTop": 24,
            },
          },
        },
      }
    }
  >
    With items rendered as buttons
  </StyledLabelBase>
  <StyledBreadcrumbBase
    ariaLabel="Breadcrumb with items rendered as buttons"
    items={
      Array [
        Object {
          "key": "Files",
          "onClick": [Function],
          "text": "Files",
        },
        Object {
          "key": "f1",
          "onClick": [Function],
          "text": "Folder 1",
        },
        Object {
          "key": "f2",
          "onClick": [Function],
          "text": "Folder 2",
        },
        Object {
          "key": "f3",
          "onClick": [Function],
          "text": "Folder 3",
        },
        Object {
          "key": "f4",
          "text": "Folder 4 (non-clickable)",
        },
        Object {
          "key": "f5",
          "onClick": [Function],
          "text": "Folder 5",
        },
        Object {
          "key": "f6",
          "onClick": [Function],
          "text": "Folder 6",
        },
        Object {
          "key": "f7",
          "onClick": [Function],
          "text": "Folder 7",
        },
        Object {
          "key": "f8",
          "onClick": [Function],
          "text": "Folder 8",
        },
        Object {
          "key": "f9",
          "onClick": [Function],
          "text": "Folder 9",
        },
        Object {
          "key": "f10",
          "onClick": [Function],
          "text": "Folder 10",
        },
        Object {
          "isCurrentItem": true,
          "key": "f11",
          "onClick": [Function],
          "text": "Folder 11",
        },
      ]
    }
    maxDisplayedItems={10}
    overflowAriaLabel="More links"
  />
  <StyledLabelBase
    styles={
      Object {
        "root": Object {
          "margin": "10px 0",
          "selectors": Object {
            "&:not(:first-child)": Object {
              "marginTop": 24,
            },
          },
        },
      }
    }
  >
    With items rendered as links
  </StyledLabelBase>
  <StyledBreadcrumbBase
    ariaLabel="Breadcrumb with items rendered as links"
    items={
      Array [
        Object {
          "href": "#/controls/web/breadcrumb",
          "key": "Files",
          "text": "Files",
        },
        Object {
          "href": "#/controls/web/breadcrumb",
          "key": "f1",
          "text": "Folder 1",
        },
        Object {
          "href": "#/controls/web/breadcrumb",
          "key": "f2",
          "text": "Folder 2",
        },
        Object {
          "href": "#/controls/web/breadcrumb",
          "key": "f3",
          "text": "Folder 3",
        },
        Object {
          "key": "f4",
          "text": "Folder 4 (non-clickable)",
        },
        Object {
          "href": "#/controls/web/breadcrumb",
          "isCurrentItem": true,
          "key": "f5",
          "text": "Folder 5",
        },
      ]
    }
    maxDisplayedItems={3}
    overflowAriaLabel="More links"
  />
  <StyledLabelBase
    styles={
      Object {
        "root": Object {
          "margin": "10px 0",
          "selectors": Object {
            "&:not(:first-child)": Object {
              "marginTop": 24,
            },
          },
        },
      }
    }
  >
    With last item rendered as heading
  </StyledLabelBase>
  <StyledBreadcrumbBase
    ariaLabel="With last item rendered as heading"
    items={
      Array [
        Object {
          "key": "Files",
          "onClick": [Function],
          "text": "Files",
        },
        Object {
          "key": "d1",
          "onClick": [Function],
          "text": "Folder 1",
        },
        Object {
          "as": "h4",
          "isCurrentItem": true,
          "key": "d2",
          "text": "Folder 2",
        },
      ]
    }
    overflowAriaLabel="More links"
  />
  <StyledLabelBase
    styles={
      Object {
        "root": Object {
          "margin": "10px 0",
          "selectors": Object {
            "&:not(:first-child)": Object {
              "marginTop": 24,
            },
          },
        },
      }
    }
  >
    With custom rendered divider and overflow icon
  </StyledLabelBase>
  <StyledBreadcrumbBase
    ariaLabel="With custom rendered divider and overflow icon"
    dividerAs={[Function]}
    items={
      Array [
        Object {
          "key": "Files",
          "onClick": [Function],
          "text": "Files",
        },
        Object {
          "key": "d1",
          "onClick": [Function],
          "text": "Folder 1",
        },
        Object {
          "as": "h4",
          "isCurrentItem": true,
          "key": "d2",
          "text": "Folder 2",
        },
      ]
    }
    maxDisplayedItems={3}
    onRenderOverflowIcon={[Function]}
    overflowAriaLabel="More links"
  />
</div>
`;
