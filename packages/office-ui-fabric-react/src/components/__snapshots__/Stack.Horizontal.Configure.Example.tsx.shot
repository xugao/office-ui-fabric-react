// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component Examples renders Stack.Horizontal.Configure.Example.tsx correctly 1`] = `
<Stack
  tokens={
    Object {
      "childrenGap": 10,
    }
  }
>
  <Stack
    disableShrink={true}
    horizontal={true}
  >
    <StackItem
      grow={true}
    >
      <Stack>
        <StyledSliderBase
          defaultValue={5}
          label="Number of items:"
          max={30}
          min={1}
          onChange={[Function]}
          showValue={true}
          step={1}
        />
        <Stack
          disableShrink={true}
          horizontal={true}
        >
          <StyledCheckboxBase
            label="Shadow around items"
            onChange={[Function]}
            styles={
              Object {
                "root": Object {
                  "marginRight": 10,
                },
              }
            }
          />
          <StyledCheckboxBase
            label="Prevent item overflow"
            onChange={[Function]}
          />
        </Stack>
      </Stack>
    </StackItem>
    <StackItem
      grow={true}
    >
      <Stack
        disableShrink={true}
        horizontal={true}
        tokens={
          Object {
            "childrenGap": 20,
          }
        }
      >
        <Stack>
          <StyledCheckboxBase
            label="Wrap items"
            onChange={[Function]}
            styles={
              Object {
                "root": Object {
                  "marginBottom": 10,
                },
              }
            }
          />
          <StyledCheckboxBase
            label="Shrink items"
            onChange={[Function]}
          />
        </Stack>
        <StackItem
          grow={true}
        >
          <StyledSliderBase
            defaultValue={100}
            label="Container width:"
            max={100}
            min={1}
            onChange={[Function]}
            showValue={true}
            step={1}
          />
        </StackItem>
      </Stack>
    </StackItem>
  </Stack>
  <Stack
    disableShrink={true}
    horizontal={true}
    tokens={
      Object {
        "childrenGap": 20,
      }
    }
  >
    <StackItem
      grow={true}
    >
      <Stack>
        <StyledSliderBase
          defaultValue={0}
          label="Horizontal gap between items:"
          max={50}
          min={0}
          onChange={[Function]}
          showValue={true}
          step={1}
        />
        <StyledSliderBase
          defaultValue={0}
          label="Vertical gap between items:"
          max={50}
          min={0}
          onChange={[Function]}
          showValue={true}
          step={1}
        />
      </Stack>
    </StackItem>
    <StackItem
      grow={true}
    >
      <Stack>
        <StyledSliderBase
          defaultValue={0}
          label="Left padding:"
          max={50}
          min={0}
          onChange={[Function]}
          showValue={true}
          step={1}
        />
        <StyledSliderBase
          defaultValue={0}
          label="Right padding:"
          max={50}
          min={0}
          onChange={[Function]}
          showValue={true}
          step={1}
        />
      </Stack>
    </StackItem>
    <StackItem
      grow={true}
    >
      <Stack>
        <StyledSliderBase
          defaultValue={0}
          label="Top padding:"
          max={50}
          min={0}
          onChange={[Function]}
          showValue={true}
          step={1}
        />
        <StyledSliderBase
          defaultValue={0}
          label="Bottom padding:"
          max={50}
          min={0}
          onChange={[Function]}
          showValue={true}
          step={1}
        />
      </Stack>
    </StackItem>
  </Stack>
  <Stack
    disableShrink={true}
    horizontal={true}
    tokens={
      Object {
        "childrenGap": 20,
      }
    }
    verticalAlign="end"
  >
    <StackItem
      grow={true}
    >
      <StyledWithResponsiveMode
        label="Horizontal alignment:"
        onChange={[Function]}
        options={
          Array [
            Object {
              "key": "start",
              "text": "Left",
            },
            Object {
              "key": "center",
              "text": "Center",
            },
            Object {
              "key": "end",
              "text": "Right",
            },
            Object {
              "key": "space-around",
              "text": "Space around",
            },
            Object {
              "key": "space-between",
              "text": "Space between",
            },
            Object {
              "key": "space-evenly",
              "text": "Space evenly",
            },
          ]
        }
        placeholder="Select Horizontal Alignment"
        selectedKey="start"
      />
    </StackItem>
    <StackItem
      grow={true}
    >
      <StyledWithResponsiveMode
        label="Vertical alignment:"
        onChange={[Function]}
        options={
          Array [
            Object {
              "key": "start",
              "text": "Top",
            },
            Object {
              "key": "center",
              "text": "Center",
            },
            Object {
              "key": "end",
              "text": "Bottom",
            },
          ]
        }
        placeholder="Select Vertical Alignment"
        selectedKey="start"
      />
    </StackItem>
    <StackItem>
      <StyledCheckboxBase
        label="Hide empty children"
        onChange={[Function]}
      />
    </StackItem>
    <StackItem
      grow={true}
    >
      <StyledTextFieldBase
        label="Enter a space-separated list of empty children (e.g. 1 2 3):"
        onChange={[Function]}
      />
    </StackItem>
  </Stack>
  <HorizontalStackConfigureExampleContent
    columnGap={0}
    disableShrink={true}
    emptyChildren={Array []}
    hideEmptyChildren={false}
    horizontalAlignment="start"
    numItems={5}
    paddingBottom={0}
    paddingLeft={0}
    paddingRight={0}
    paddingTop={0}
    preventOverflow={false}
    rowGap={0}
    showBoxShadow={false}
    verticalAlignment="start"
    wrap={false}
    wrapperWidth={100}
  />
</Stack>
`;
