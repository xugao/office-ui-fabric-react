// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component Examples renders DatePicker.Format.Example.tsx correctly 1`] = `
<div>
  <p>
    Applications can customize how dates are formatted and parsed. Formatted dates can be ambiguous, so the control will avoid parsing the formatted strings of dates selected using the UI when text input is allowed. In this example, we are formatting and parsing dates as dd/MM/yy.
  </p>
  <StyledDatePickerBase
    allowTextInput={true}
    ariaLabel="This field is required. One of the support input formats is year dash month dash day."
    className=

        {
          margin-bottom: 15px;
          margin-left: 0;
          margin-right: 0;
          margin-top: 0;
          max-width: 300px;
        }
    firstDayOfWeek={0}
    formatDate={[Function]}
    isRequired={false}
    label="Start date"
    onSelectDate={[Function]}
    parseDateFromString={[Function]}
    strings={
      Object {
        "closeButtonAriaLabel": "Close date picker",
        "days": Array [
          "Sunday",
          "Monday",
          "Tuesday",
          "Wednesday",
          "Thursday",
          "Friday",
          "Saturday",
        ],
        "goToToday": "Go to today",
        "invalidInputErrorMessage": "Invalid date format.",
        "isRequiredErrorMessage": "Start date is required.",
        "months": Array [
          "January",
          "February",
          "March",
          "April",
          "May",
          "June",
          "July",
          "August",
          "September",
          "October",
          "November",
          "December",
        ],
        "nextMonthAriaLabel": "Go to next month",
        "nextYearAriaLabel": "Go to next year",
        "prevMonthAriaLabel": "Go to previous month",
        "prevYearAriaLabel": "Go to previous year",
        "shortDays": Array [
          "S",
          "M",
          "T",
          "W",
          "T",
          "F",
          "S",
        ],
        "shortMonths": Array [
          "Jan",
          "Feb",
          "Mar",
          "Apr",
          "May",
          "Jun",
          "Jul",
          "Aug",
          "Sep",
          "Oct",
          "Nov",
          "Dec",
        ],
      }
    }
    value={null}
  />
  <CustomizedDefaultButton
    onClick={[Function]}
    text="Clear"
  />
  <div />
</div>
`;
