// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component Examples renders DatePicker.Input.Example.tsx correctly 1`] = `
<div>
  <p>
    Text input allowed by default when use keyboard navigation. Mouse click the TextField will popup DatePicker, click the TextField again will dismiss the DatePicker and allow text input.
  </p>
  <StyledDatePickerBase
    allowTextInput={true}
    ariaLabel="This field is required. One of the support input formats is year dash month dash day."
    className=

        {
          margin-bottom: 15px;
          margin-left: 0;
          margin-right: 0;
          margin-top: 0;
          max-width: 300px;
        }
    firstDayOfWeek={0}
    isRequired={false}
    label="Start date"
    onSelectDate={[Function]}
    strings={
      Object {
        "closeButtonAriaLabel": "Close date picker",
        "days": Array [
          "Sunday",
          "Monday",
          "Tuesday",
          "Wednesday",
          "Thursday",
          "Friday",
          "Saturday",
        ],
        "goToToday": "Go to today",
        "invalidInputErrorMessage": "Invalid date format.",
        "isRequiredErrorMessage": "Start date is required.",
        "months": Array [
          "January",
          "February",
          "March",
          "April",
          "May",
          "June",
          "July",
          "August",
          "September",
          "October",
          "November",
          "December",
        ],
        "nextMonthAriaLabel": "Go to next month",
        "nextYearAriaLabel": "Go to next year",
        "prevMonthAriaLabel": "Go to previous month",
        "prevYearAriaLabel": "Go to previous year",
        "shortDays": Array [
          "S",
          "M",
          "T",
          "W",
          "T",
          "F",
          "S",
        ],
        "shortMonths": Array [
          "Jan",
          "Feb",
          "Mar",
          "Apr",
          "May",
          "Jun",
          "Jul",
          "Aug",
          "Sep",
          "Oct",
          "Nov",
          "Dec",
        ],
      }
    }
    value={null}
  />
  <CustomizedDefaultButton
    onClick={[Function]}
    text="Clear"
  />
</div>
`;
