// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component Examples renders ExtendedPeoplePicker.Controlled.Example.tsx correctly 1`] = `
<div>
  <ExtendedPeoplePicker
    className=

        {
          margin-bottom: 15px;
          max-width: 400px;
        }
    componentRef={
      Object {
        "current": null,
      }
    }
    floatingPickerProps={
      Object {
        "getTextFromItem": [Function],
        "key": "normal",
        "onInputChanged": [Function],
        "onRemoveSuggestion": [Function],
        "onResolveSuggestions": [Function],
        "onSuggestionsHidden": [Function],
        "onSuggestionsShown": [Function],
        "onValidateInput": [Function],
        "onZeroQuerySuggestion": [Function],
        "pickerSuggestionsProps": Object {
          "footerItemsProps": Array [
            Object {
              "renderItem": [Function],
              "shouldShow": [Function],
            },
            Object {
              "ariaLabel": "Search more",
              "onExecute": [Function],
              "renderItem": [Function],
              "shouldShow": [Function],
            },
          ],
          "headerItemsProps": Array [
            Object {
              "ariaLabel": "Use the typed address",
              "onExecute": [Function],
              "renderItem": [Function],
              "shouldShow": [Function],
            },
            Object {
              "renderItem": [Function],
              "shouldShow": [Function],
            },
          ],
          "shouldSelectFirstItem": [Function],
          "showRemoveButtons": true,
        },
        "showForceResolve": [Function],
        "suggestionsStore": SuggestionsStore {
          "_ensureSuggestionModel": [Function],
          "_isSuggestionModel": [Function],
          "getAriaLabel": undefined,
          "suggestions": Array [],
        },
      }
    }
    focusZoneProps={
      Object {
        "handleTabKey": 1,
        "shouldInputLoseFocusOnArrowKey": [Function],
      }
    }
    headerComponent={
      <div
        className=

            {
              padding-bottom: 0;
              padding-left: 10px;
              padding-right: 10px;
              padding-top: 0;
            }
        data-is-focusable={true}
      >
        To:
      </div>
    }
    inputProps={
      Object {
        "aria-label": "People Picker",
        "onBlur": [Function],
        "onFocus": [Function],
      }
    }
    key="normal"
    onItemAdded={[Function]}
    onItemsRemoved={[Function]}
    onRenderFloatingPicker={[Function]}
    onRenderSelectedItems={[Function]}
    selectedItems={Array []}
    selectedItemsListProps={
      Object {
        "copyMenuItemText": "Copy name",
        "editMenuItemText": "Edit",
        "floatingPickerProps": Object {
          "getTextFromItem": [Function],
          "key": "normal",
          "onInputChanged": [Function],
          "onRemoveSuggestion": [Function],
          "onResolveSuggestions": [Function],
          "onSuggestionsHidden": [Function],
          "onSuggestionsShown": [Function],
          "onValidateInput": [Function],
          "onZeroQuerySuggestion": [Function],
          "pickerSuggestionsProps": Object {
            "footerItemsProps": Array [
              Object {
                "renderItem": [Function],
                "shouldShow": [Function],
              },
              Object {
                "ariaLabel": "Search more",
                "onExecute": [Function],
                "renderItem": [Function],
                "shouldShow": [Function],
              },
            ],
            "headerItemsProps": Array [
              Object {
                "ariaLabel": "Use the typed address",
                "onExecute": [Function],
                "renderItem": [Function],
                "shouldShow": [Function],
              },
              Object {
                "renderItem": [Function],
                "shouldShow": [Function],
              },
            ],
            "shouldSelectFirstItem": [Function],
            "showRemoveButtons": true,
          },
          "showForceResolve": [Function],
          "suggestionsStore": SuggestionsStore {
            "_ensureSuggestionModel": [Function],
            "_isSuggestionModel": [Function],
            "getAriaLabel": undefined,
            "suggestions": Array [],
          },
        },
        "getEditingItemText": [Function],
        "onCopyItems": [Function],
        "onExpandGroup": [Function],
        "onRenderFloatingPicker": [Function],
        "removeMenuItemText": "Remove",
      }
    }
    suggestionItems={Array []}
  />
  <CustomizedPrimaryButton
    onClick={[Function]}
    text="Set focus"
  />
</div>
`;
