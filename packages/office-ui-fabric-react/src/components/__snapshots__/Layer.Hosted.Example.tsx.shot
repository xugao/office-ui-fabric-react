// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component Examples renders Layer.Hosted.Example.tsx correctly 1`] = `
<div
  className=

      & p {
        margin-top: 30px;
      }
>
  <StyledToggleBase
    checked={true}
    inlineLabel={true}
    label="Show host"
    onChange={[Function]}
  />
  <LayerHost
    className=

        {
          background: rgba(255, 0, 0, 0.2);
          border: 1px dashed #000000;
          height: 100px;
          padding-bottom: 20px;
          padding-left: 20px;
          padding-right: 20px;
          padding-top: 20px;
          position: relative;
        }
        &:before {
          content: "I am a LayerHost with id=layerhost1";
          left: 50%;
          position: absolute;
          top: 50%;
          transform: translate(-50%, -50%);
        }
    id="layerHost0"
  />
  <p>
    In some cases, you may need to contain layered content within an area. Create an instance of a LayerHost along with an id, and provide a hostId on the layer to render it within the specific host. (Note that it's important that you don't include children within the LayerHost. It's meant to contain Layered content only.)
  </p>
  <StyledToggleBase
    checked={false}
    inlineLabel={true}
    label="Render the box below in a Layer and target it at hostId=layerHost0"
    onChange={[Function]}
    styles={
      Object {
        "root": Object {
          "margin": "10px 0",
        },
      }
    }
  />
  <div
    className=

        {
          animation-duration: 0.367s;
          animation-fill-mode: both;
          animation-name: keyframes from{opacity:0;}to{opacity:1;} keyframes from{transform:scale3d(.98,.98,1);}to{transform:scale3d(1,1,1);};
          animation-timing-function: cubic-bezier(.1,.9,.2,1);
          background-color: #0078d4;
          color: #ffffff;
          line-height: 50px;
          padding-bottom: 0;
          padding-left: 20px;
          padding-right: 20px;
          padding-top: 0;
        }
  >
    This is example layer content.
  </div>
  <div
    className=

        {
          background-color: #c8c6c4;
          line-height: 50px;
          margin-bottom: 8px;
          margin-left: 0;
          margin-right: 0;
          margin-top: 8px;
          padding-bottom: 0;
          padding-left: 20px;
          padding-right: 20px;
          padding-top: 0;
        }
  >
    I am normally below the content.
  </div>
  <p>
    If you do not specify a hostId, the hosted layer will default to being fixed to the page by default.
  </p>
  <StyledToggleBase
    checked={false}
    inlineLabel={true}
    label="Render the box below in a Layer without specifying a host, fixing it to the top of the page"
    onChange={[Function]}
    styles={
      Object {
        "root": Object {
          "margin": "10px 0",
        },
      }
    }
  />
  <div
    className=

        {
          animation-duration: 0.367s;
          animation-fill-mode: both;
          animation-name: keyframes from{opacity:0;}to{opacity:1;} keyframes from{transform:scale3d(.98,.98,1);}to{transform:scale3d(1,1,1);};
          animation-timing-function: cubic-bezier(.1,.9,.2,1);
          background-color: #0078d4;
          color: #ffffff;
          line-height: 50px;
          padding-bottom: 0;
          padding-left: 20px;
          padding-right: 20px;
          padding-top: 0;
        }
  >
    This is example layer content.
  </div>
</div>
`;
